geom_point(aes(color = Treatment_and_Dose)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
stat_poly_eq(formula = my.formula,
aes(label = paste(..rr.label..)),
parse = TRUE)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Treatment_and_Dose_and_Timepoint)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
stat_poly_eq(formula = my.formula,
aes(label = paste(..rr.label..)),
parse = TRUE)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Timepoint)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
stat_poly_eq(formula = my.formula,
aes(label = paste(..rr.label..)),
parse = TRUE)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Tx)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
stat_poly_eq(formula = my.formula,
aes(label = paste(..rr.label..)),
parse = TRUE)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Dose)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
stat_poly_eq(formula = my.formula,
aes(label = paste(..rr.label..)),
parse = TRUE)
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`, "BindingDensity", "Live.Area")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
# labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
#                    "Intercept =",signif(fit$coef[[1]],5 ),
#                    " Slope =",signif(fit$coef[[2]], 5),
#                    " P =",signif(summary(fit)$coef[2,4], 5)))
#
geom_text(aes(3, 40, label = paste("Adj R2 = ", adj.r.squared, "\n",
"Intercept =",intercept, "\n",
"Slope =", slope, "\n",
"P =", pvalue)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`, "BindingDensity", "Live.Area")
?geom_text
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
# labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
#                    "Intercept =",signif(fit$coef[[1]],5 ),
#                    " Slope =",signif(fit$coef[[2]], 5),
#                    " P =",signif(summary(fit)$coef[2,4], 5)))
#
geom_text(aes(3, 40, label = paste("Adj R2 = ", signif(summary(fit)$adj.r.squared, 5), "\n",
"Intercept =",signif(fit$coef[[1]],5 ), "\n",
"Slope =", signif(fit$coef[[2]], 5), "\n",
"P =", signif(summary(fit)$coef[2,4], 5)))))
}
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
# labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
#                    "Intercept =",signif(fit$coef[[1]],5 ),
#                    " Slope =",signif(fit$coef[[2]], 5),
#                    " P =",signif(summary(fit)$coef[2,4], 5)))
#
geom_text(aes(3, 40, label = paste("Adj R2 = ", signif(summary(fit)$adj.r.squared, 5), "\n",
"Intercept =",signif(fit$coef[[1]],5 ), "\n",
"Slope =", signif(fit$coef[[2]], 5), "\n",
"P =", signif(summary(fit)$coef[2,4], 5))))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`, "BindingDensity", "Live.Area")
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
# labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
#                    "Intercept =",signif(fit$coef[[1]],5 ),
#                    " Slope =",signif(fit$coef[[2]], 5),
#                    " P =",signif(summary(fit)$coef[2,4], 5)))
#
geom_text(aes(label = paste("Adj R2 = ", signif(summary(fit)$adj.r.squared, 5), "\n",
"Intercept =",signif(fit$coef[[1]],5 ), "\n",
"Slope =", signif(fit$coef[[2]], 5), "\n",
"P =", signif(summary(fit)$coef[2,4], 5))))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes(color = Pooled)) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes(color = quote(Pooled)) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes(color = quote(Pooled))) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes_string(color = "Pooled")) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes_string(color = !!Pooled)) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes(color = !!Pooled)) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
?enquote
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes(color = enquote(Pooled))) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes_string(color = enquote(Pooled))) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
ggplotRegression <- function(dat, xvar, yvar){
fml <- paste(yvar, "~", xvar)
fit <- lm(fml, dat)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
geom_point(aes_string(color = "Pooled")) +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
ggplotRegression(image_bd$`binding-density-vs-spheroids`,"Live.Area", "BindingDensity")
fit  <- lm(BindingDensity~Total.Area,data=image_bd$`binding-density-vs-spheroids`)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
labs(title = "USP18 Ceres Score vs ISG.Sig.Adar Signature Genes",
x = "USP18 Gene Effect (CERES)",
y = "Mean of ISG.Sig.Adar Signature Genes")+
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm"))+
geom_smooth(method = "lm")  +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
data <- image_bd$`binding-density-vs-spheroids` %>% filter(Pooled == NA)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(Pooled == NA)
fit  <- lm(BindingDensity~Total.Area,data=data)
ggplot(data,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
fit  <- lm(BindingDensity~Total.Area,data=data)
fit
unique(image_bd$`binding-density-vs-spheroids`$Pooled)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(Pooled != TRUE)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(Pooled == TRUE)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(Pooled != TRUE)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
fit
summary(fit)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
ggplot(data,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
View(data)
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
ggplot(data,
aes(x = Live.Area, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
fit  <- lm(BindingDensity~Total.Area,data=image_bd$`binding-density-vs-spheroids`)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
#remove pooled
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
ggplot(data, aes(x = Live.Area, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
#remove pooled
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
ggplot(data, aes(x = Live.Area, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
fit  <- lm(BindingDensity~Total.Area,data=image_bd$`binding-density-vs-spheroids`)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Total.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
#including Kevin's way to calculate pooled
fit  <- lm(BindingDensity~Live.Area,data=image_bd$`binding-density-vs-spheroids`)
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
pdf('./output/Total_AreaxBindingDensity_pooled.pdf')
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Total.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
dev.off()
#including Kevin's way to calculate pooled
fit  <- lm(BindingDensity~Live.Area,data=image_bd$`binding-density-vs-spheroids`)
pdf('./output/Live.AreaxBindingDensity_pooled.pdf')
ggplot(image_bd$`binding-density-vs-spheroids`,
aes(x = Live.Area, y = BindingDensity)) +
geom_point(aes(color = Pooled)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
dev.off()
#remove pooled
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Total.Area,data=data)
pdf('./output/Total.AreaxBindingDensity_NOpooled.pdf')
ggplot(data, aes(x = Live.Area, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
dev.off()
View(metadata)
# Trying Different Linear Models for Binding Density
fit  <- lm(BindingDensity~Total.Area,data=image_bd$`binding-density-vs-spheroids`)
fit2 <- lm(BindingDensity~Total.Area+Spheroid.Count+Live.Area+percent.Dead,
data = image_bd$`binding-density-vs-spheroids`)
fit3 <- lm(BindingDensity~Total.Area+Spheroid.Count+percent.Dead,
data = image_bd$`binding-density-vs-spheroids`)
fit4  <- lm(BindingDensity~Spheroid.Count,data=image_bd$`binding-density-vs-spheroids`)
fit5  <- lm(BindingDensity~Live.Area,data=image_bd$`binding-density-vs-spheroids`)
summary(fit)
summary(fit2)
summary(fit3)
summary(fit4)
summary(fit5)
plot_summs(fit, fit2,fit3,fit4,fit5, scale = TRUE, plot.distributions = TRUE)
?
plot_summs
plot_summs(fit, fit2,fit3,fit4,fit5, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'-Live.Area','Spheriod','Live.Area'))
pdf('./output/LinearModels_.pdf')
plot_summs(fit, fit2,fit3,fit4,fit5, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'-Live.Area','Spheriod','Live.Area'))
dev.off()
plot_summs(fit, fit2,fit5,fit6,fit7,fit8,fit9, scale = TRUE,
plot.distributions = TRUE, model.names = )
#try log scale (not useful)
image_bd$`binding-density-vs-spheroids`$log.Spheroid.Count=log(1+image_bd$`binding-density-vs-spheroids`$Spheroid.Count)
image_bd$`binding-density-vs-spheroids`$log.Total.Area=log(1+image_bd$`binding-density-vs-spheroids`$Total.Area)
image_bd$`binding-density-vs-spheroids`$log.Live.Area=log(1+image_bd$`binding-density-vs-spheroids`$Live.Area)
image_bd$`binding-density-vs-spheroids`$log.percent.Dead=log(1+image_bd$`binding-density-vs-spheroids`$percent.Dead)
fit6  <- lm(BindingDensity~log.Spheroid.Count,data=image_bd$`binding-density-vs-spheroids`)
summary(fit6)
fit7  <- lm(BindingDensity~log.Total.Area,data=image_bd$`binding-density-vs-spheroids`)
summary(fit7)
fit8  <- lm(BindingDensity~log.Live.Area,data=image_bd$`binding-density-vs-spheroids`)
summary(fit8)
fit9  <- lm(BindingDensity~log.percent.Dead,data=image_bd$`binding-density-vs-spheroids`)
summary(fit9)
plot_summs(fit, fit2,fit5,fit6,fit7,fit8,fit9, scale = TRUE,
plot.distributions = TRUE, model.names = )
pdf('./output/LinearModels_log_.pdf')
plot_summs(fit, fit2,fit3,fit4,fit5, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'Live.Area','log.Spheroid.Count',
'log.Total.Area','log.Live.Area','log.percent.Dead'))
dev.off()
pdf('./output/LinearModels_log_.pdf')
plot_summs(fit, fit2,fit3,fit4,fit5, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'Live.Area','log.Spheroid.Count',
'log.Total.Area','log.Live.Area','log.percent.Dead'))
dev.off()
pdf('./output/LinearModels_log_.pdf')
plot_summs(fit, fit2,fit5,fit6,fit7,fit8,fit9, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'Live.Area','log.Spheroid.Count',
'log.Total.Area','log.Live.Area','log.percent.Dead'))
dev.off()
#remove pooled, percent.Dead
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~percent.Dead,data=data)
pdf('./output/percent.DeadxBindingDensity_NOpooled.pdf')
ggplot(data, aes(x = percent.Dead, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
dev.off()
#remove pooled, Spheroid.Count
data <- image_bd$`binding-density-vs-spheroids` %>% filter(is.na(Pooled))
fit  <- lm(BindingDensity~Spheroid.Count,data=data)
pdf('./output/Spheroid.CountxBindingDensity_NOpooled.pdf')
ggplot(data, aes(x = Spheroid.Count, y = BindingDensity)) +
theme(plot.margin=unit(c(0.1,0.1,0.1,0.1),"cm")) +
geom_point() +
geom_smooth(method = "lm") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
dev.off()
?plot_summs
plot_summs(fit, fit2,fit5,fit6,fit7,fit8,fit9, scale = TRUE, inner_ci_level = .9, plot.distributions = TRUE,
model.names=c("Total.Area","All",'Live.Area','log.Spheroid.Count',
'log.Total.Area','log.Live.Area','log.percent.Dead'))
plot_summs(fit, fit2,fit3,fit4,fit5,fit10, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'-Live.Area','Spheriod','Live.Area','percent.Dead'))
fit10  <- lm(BindingDensity~percent.Dead,data=image_bd$`binding-density-vs-spheroids`)
plot_summs(fit, fit2,fit3,fit4,fit5,fit10, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'-Live.Area','Spheriod','Live.Area','percent.Dead'))
pdf('./output/LinearModels_.pdf')
plot_summs(fit, fit2,fit3,fit4,fit5,fit10, scale = TRUE, plot.distributions = TRUE,
model.names=c("Total.Area","All",'-Live.Area','Spheriod','Live.Area','percent.Dead'))
dev.off()
