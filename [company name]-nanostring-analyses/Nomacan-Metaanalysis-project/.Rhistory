renv::activate()
renv::activate()
#Verify Package Manager Installed, if not install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", dependencies = TRUE)
# Libraries (Install / Load) ----------------------------------------------
#library("devtools")
#install_github("dbdimitrov/BingleSeq")
#library(BingleSeq)
#startBingleSeq()
#Verify Package Manager Installed, if not install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", dependencies = TRUE)
#load in libraries
packages <- c('NanoStringDiff','NanoStringNorm','tidyverse','ggplot2','NACHO',
'openxlsx','RColorBrewer','Hmisc','hrbrthemes','viridis',
'knitr','PCAtools','biomaRt','corrplot')
#remotes::install_github("mcanouil/NACHO")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
BiocManager::install(x, ask = FALSE, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# Libraries (Install / Load) ----------------------------------------------
#library("devtools")
#install_github("dbdimitrov/BingleSeq")
#library(BingleSeq)
#startBingleSeq()
#Verify Package Manager Installed, if not install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", dependencies = TRUE)
#load in libraries
packages <- c('NanoStringDiff','NanoStringNorm','tidyverse','ggplot2','NACHO',
'openxlsx','RColorBrewer','Hmisc','hrbrthemes','viridis',
'knitr','PCAtools','biomaRt','corrplot')
#remotes::install_github("mcanouil/NACHO")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
BiocManager::install(x, ask = FALSE, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# Functions ---------------------------------------------------------------
#read in all sheets from excel
read_all_sheets = function(xlsxFile, ...) {
sheet_names = openxlsx::getSheetNames(xlsxFile)
sheet_list = as.list(rep(NA, length(sheet_names)))
names(sheet_list) = sheet_names
for (sn in sheet_names) {
sheet_list[[sn]] = openxlsx::read.xlsx(xlsxFile, sheet=sn, ...)
}
return(sheet_list)
}
#function for saving
save_pheatmap_png <- function(x, filename, width=1200, height=1000, res = 150) {
png(filename, width = width, height = height, res = res)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
#loading in column information with integars adds an X (fix)
Correct_Colnames <- function(df) {
#if X added to column, should not be empty
delete.columns <- grep("(^X)", colnames(df), perl=T)
#if not empty, replace
if (length(delete.columns) > 0) {
colnames(df) <- gsub("(^X)", "",  colnames(df))
}
return(df)
}
# RCC Data (Skipped For Now) ---------------------------------------------------
# #load in meta data
# meta <- read.table('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Nanostring_Metadata.csv',
#                    sep=",",header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
#
# #select meta data for only samples to be loaded
# files <- list.files('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC')
#
# #filter
# meta <- meta %>% filter(File.Name %in% files)
#
# #load in RCC data
# rcc_data <- load_rcc('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC',
#          ssheet_csv = meta,id_colname="File.Name")
# Libraries (Install / Load) ----------------------------------------------
#library("devtools")
#install_github("dbdimitrov/BingleSeq")
#library(BingleSeq)
#startBingleSeq()
#Verify Package Manager Installed, if not install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", dependencies = TRUE)
#load in libraries
packages <- c('NanoStringDiff','NanoStringNorm','tidyverse','ggplot2','NACHO',
'openxlsx','RColorBrewer','Hmisc','hrbrthemes','viridis',
'knitr','PCAtools','biomaRt','corrplot')
#remotes::install_github("mcanouil/NACHO")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
BiocManager::install(x, ask = FALSE, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# Functions ---------------------------------------------------------------
#read in all sheets from excel
read_all_sheets = function(xlsxFile, ...) {
sheet_names = openxlsx::getSheetNames(xlsxFile)
sheet_list = as.list(rep(NA, length(sheet_names)))
names(sheet_list) = sheet_names
for (sn in sheet_names) {
sheet_list[[sn]] = openxlsx::read.xlsx(xlsxFile, sheet=sn, ...)
}
return(sheet_list)
}
#function for saving
save_pheatmap_png <- function(x, filename, width=1200, height=1000, res = 150) {
png(filename, width = width, height = height, res = res)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
#loading in column information with integars adds an X (fix)
Correct_Colnames <- function(df) {
#if X added to column, should not be empty
delete.columns <- grep("(^X)", colnames(df), perl=T)
#if not empty, replace
if (length(delete.columns) > 0) {
colnames(df) <- gsub("(^X)", "",  colnames(df))
}
return(df)
}
# RCC Data (Skipped For Now) ---------------------------------------------------
# #load in meta data
# meta <- read.table('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Nanostring_Metadata.csv',
#                    sep=",",header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
#
# #select meta data for only samples to be loaded
# files <- list.files('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC')
#
# #filter
# meta <- meta %>% filter(File.Name %in% files)
#
# #load in RCC data
# rcc_data <- load_rcc('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC',
#          ssheet_csv = meta,id_colname="File.Name")
# Load Data: Starting from nSolver Normalized Data -----------------------------
#base path
base='/home/bionerd/Dropbox/Company/Xsphera'
#set working directory
setwd(file.path(base,'@Analysis/Nomacan-Metaanalysis'))
#Pull in Nanostring metadata and expression data
Metadata <- read.csv(file.path(base,'@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.14 Nanostring_Metadata=Nomacan Focused.csv'))
Expression_Data <- read.csv(file.path(base,'@Data/Nanostring/Nomacan_Meta_Analysis/Nomacan Meta Analysis_NormalizedData.csv'))
Genes <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List.csv'))
Annotations <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List_Annotations.csv'))
nanostring_cell_type_scores <- read.csv('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Media/New Analysis 2021-02-26 11-46/results/cell types/')
#R puts an X before any column name that starts with integar in dataframe, fix
Expression_Data <- Correct_Colnames(Expression_Data)
#Flow Data (need % cells tab, sheet 1 = raw data)
flow_data <- read.xlsx(file.path(base,'@Data/Flow Data/20210218 baseline P0003-113-Nathan Modified.xlsx'),
sheet = 2)
nanostring_cell_type_scores <- read.csv('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Media/New Analysis 2021-02-26 11-46/results/cell types/cell type scores - raw.csv')
# Load Data: Starting from nSolver Normalized Data -----------------------------
#base path
base='/home/bionerd/Dropbox/Company/Xsphera'
#set working directory
setwd(file.path(base,'@Analysis/Nomacan-Metaanalysis'))
#Pull in Nanostring metadata and expression data
Metadata <- read.csv(file.path(base,'@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.14 Nanostring_Metadata=Nomacan Focused.csv'))
Expression_Data <- read.csv(file.path(base,'@Data/Nanostring/Nomacan_Meta_Analysis/Nomacan Meta Analysis_NormalizedData.csv'))
Genes <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List.csv'))
Annotations <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List_Annotations.csv'))
nanostring_cell_type_scores <- read.csv('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Media/New Analysis 2021-02-26 11-46/results/cell types/cell type scores - raw.csv')
#R puts an X before any column name that starts with integar in dataframe, fix
Expression_Data <- Correct_Colnames(Expression_Data)
#Flow Data (need % cells tab, sheet 1 = raw data)
flow_data <- read.xlsx(file.path(base,'@Data/Flow Data/20210218 baseline P0003-113-Nathan Modified.xlsx'),
sheet = 2)
full.gsea <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Full_IgG_Probe 2021-03-05 12-11/results/pathway scoring/signature scores.csv'))
full.gsea <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Full_IgG_Probe 2021-03-05 12-11/results/pathway scoring/signature scores.csv'))
RCC.gsea <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/RCC_IgG_probe 2021-03-05 12-06/results/pathway scoring/signature scores.csv'))
lung.gsea <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/lung_IgG_probe 2021-03-05 12-05/results/pathway scoring/signature scores.csv'))
Melanoma.gsea <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Melanoma_IgG_Probe 2021-03-05 11-59/results/pathway scoring/signature scores.csv'))
# Libraries (Install / Load) ----------------------------------------------
#library("devtools")
#install_github("dbdimitrov/BingleSeq")
#library(BingleSeq)
#startBingleSeq()
#Verify Package Manager Installed, if not install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager", dependencies = TRUE)
#load in libraries
packages <- c('NanoStringDiff','NanoStringNorm','tidyverse','ggplot2','NACHO',
'openxlsx','RColorBrewer','Hmisc','hrbrthemes','viridis',
'knitr','PCAtools','biomaRt','corrplot')
#remotes::install_github("mcanouil/NACHO")
## Now load or install&load all
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
BiocManager::install(x, ask = FALSE, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
# Functions ---------------------------------------------------------------
#read in all sheets from excel
read_all_sheets = function(xlsxFile, ...) {
sheet_names = openxlsx::getSheetNames(xlsxFile)
sheet_list = as.list(rep(NA, length(sheet_names)))
names(sheet_list) = sheet_names
for (sn in sheet_names) {
sheet_list[[sn]] = openxlsx::read.xlsx(xlsxFile, sheet=sn, ...)
}
return(sheet_list)
}
#function for saving
save_pheatmap_png <- function(x, filename, width=1200, height=1000, res = 150) {
png(filename, width = width, height = height, res = res)
grid::grid.newpage()
grid::grid.draw(x$gtable)
dev.off()
}
#loading in column information with integars adds an X (fix)
Correct_Colnames <- function(df) {
#if X added to column, should not be empty
delete.columns <- grep("(^X)", colnames(df), perl=T)
#if not empty, replace
if (length(delete.columns) > 0) {
colnames(df) <- gsub("(^X)", "",  colnames(df))
}
return(df)
}
# RCC Data (Skipped For Now) ---------------------------------------------------
# #load in meta data
# meta <- read.table('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Nanostring_Metadata.csv',
#                    sep=",",header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
#
# #select meta data for only samples to be loaded
# files <- list.files('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC')
#
# #filter
# meta <- meta %>% filter(File.Name %in% files)
#
# #load in RCC data
# rcc_data <- load_rcc('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.31-Complete_RCC',
#          ssheet_csv = meta,id_colname="File.Name")
# Load Data: Starting from nSolver Normalized Data -----------------------------
#base path
base='/home/bionerd/Dropbox/Company/Xsphera'
#set working directory
setwd(file.path(base,'@Analysis/Nomacan-Metaanalysis'))
#Pull in Nanostring metadata and expression data
Metadata <- read.csv(file.path(base,'@Data/Nanostring/Xsphera Server Nanostring Data/2021.01.14 Nanostring_Metadata=Nomacan Focused.csv'))
Expression_Data <- read.csv(file.path(base,'@Data/Nanostring/Nomacan_Meta_Analysis/Nomacan Meta Analysis_NormalizedData.csv'))
Genes <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List.csv'))
Annotations <- read.csv(file.path(base,'@Data/Nanostring/Nanostring_LBL-10540-02_nCounter_NHP_Immunology_V2_Panel_Gene_List_Annotations.csv'))
nanostring_cell_type_scores <- read.csv('/home/bionerd/Dropbox/Company/Xsphera/@Data/Nanostring/Media/New Analysis 2021-02-26 11-46/results/cell types/cell type scores - raw.csv')
#R puts an X before any column name that starts with integar in dataframe, fix
Expression_Data <- Correct_Colnames(Expression_Data)
#Flow Data (need % cells tab, sheet 1 = raw data)
flow_data <- read.xlsx(file.path(base,'@Data/Flow Data/20210218 baseline P0003-113-Nathan Modified.xlsx'),
sheet = 2)
# #pull in Pathway data
# full.pathway <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Full_IgG_Probe 2021-03-05 12-11/results/pathway scoring/signature scores.csv'))
# RCC.pathway <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/RCC_IgG_probe 2021-03-05 12-06/results/pathway scoring/signature scores.csv'))
# lung.pathway <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/lung_IgG_probe 2021-03-05 12-05/results/pathway scoring/signature scores.csv'))
# Melanoma.pathway <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Melanoma_IgG_Probe 2021-03-05 11-59/results/pathway scoring/signature scores.csv'))
#
# #pull in GSEA data
# full.GSEA.directed <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Full_IgG_Probe 2021-03-05 12-11/results/pathway scoring/signature scores.csv'))
# RCC.GSEA.directed <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/RCC_IgG_probe 2021-03-05 12-06/results/pathway scoring/signature scores.csv'))
# lung.GSEA.directed <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/lung_IgG_probe 2021-03-05 12-05/results/pathway scoring/signature scores.csv'))
# Melanoma.GSEA.directed <- read.csv(file.path(base,'/@Data/Nanostring/Nomacan_Meta_Analysis/Melanoma_IgG_Probe 2021-03-05 11-59/results/pathway scoring/signature scores.csv'))
#
renv::activate()
